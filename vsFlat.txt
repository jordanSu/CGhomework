#version 330	//you should declare version number first

// Inputs
layout(location=0) in vec3 position;
layout(location=1) in vec2 texcoord;
layout(location=2) in vec3 normal;	// Here is the normal vector

// uniform variable can be viewed as a constant
// you can set the uniform variable by glUniformXXXXXXXX
// HINT: I do not use model matrix here, but you might need it
uniform mat4 model;
uniform mat4 vp;

// Outputs
// 'out' means vertex shader output for fragment shader
// with 'flat' here will make these output not to be interpolated
flat out vec2 fTexcoord;
flat out vec3 fNormal;
flat out vec3 fragmentPos;

void main()
{
	fTexcoord = texcoord;

	gl_Position=vp*model*vec4(position, 1.0);

	// Transform normal vector to world coordinate system.
	fNormal = mat3(transpose(inverse(model))) * normal;

	// Transform vector position to world coordinate system.
	fragmentPos = vec3(model*vec4(position, 1.0));
}
